:root {
    /* Fixed block dimensions */
    --block-w: 140px;
    --block-h: 64px;
    --block-h-circle: 80px;
    --grid-size: 16px;
    
    /* Color scheme */
    --bg-dark: #0a0a0f;
    --bg-card: rgba(15, 15, 25, 0.9);
    --primary-blue: #00d4ff;
    --accent-orange: #f59e0b;
    --accent-green: #10b981;
    --accent-purple: #8b5cf6;
    --accent-red: #ef4444;
    --accent-pink: #ec4899;
    --accent-yellow: #eab308;
    --accent-indigo: #6366f1;
    --text-primary: #ffffff;
    --text-secondary: #a1a1aa;
    --border-glass: rgba(255, 255, 255, 0.1);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', sans-serif;
    background: linear-gradient(135deg, #0a0a0f 0%, #1a1a2e 100%);
    color: var(--text-primary);
    overflow: hidden;
    height: 100vh;
}

.canvas-container {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.canvas {
    width: 100%;
    height: 100%;
    position: relative;
    background-image: 
        radial-gradient(circle at 1px 1px, rgba(255,255,255,0.03) 1px, transparent 0);
    background-size: var(--grid-size) var(--grid-size);
}

.connections-svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
}

/* Programming Elements */
.element {
    position: absolute;
    cursor: move;
    user-select: none;
    z-index: 10;
    transition: all 0.2s ease;
    font-family: 'JetBrains Mono', monospace;
    width: var(--block-w);
    height: var(--block-h);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    border-radius: 8px;
    backdrop-filter: blur(10px);
    overflow: hidden;
}

.element.circular {
    height: var(--block-h-circle);
    border-radius: 50%;
}

.element:hover {
    transform: translateY(-2px);
    filter: brightness(1.1);
}

.element.active {
    animation: activeGlow 1s ease-in-out infinite alternate;
}

.element.selected {
    box-shadow: 0 0 20px var(--primary-blue);
    transform: scale(1.05);
}

@keyframes activeGlow {
    from { filter: brightness(1) drop-shadow(0 0 10px currentColor); }
    to { filter: brightness(1.3) drop-shadow(0 0 20px currentColor); }
}

/* Connection points */
.connection-point {
    position: absolute;
    width: 10px;
    height: 10px;
    background: var(--primary-blue);
    border: 2px solid #fff;
    border-radius: 50%;
    cursor: pointer;
    opacity: 0;
    transition: all 0.2s ease;
    z-index: 20;
}

.element:hover .connection-point,
.connect-mode .connection-point {
    opacity: 1;
}

.connection-point:hover {
    background: var(--accent-orange);
    transform: scale(1.3);
}

.connection-point.selected {
    background: var(--accent-pink);
    transform: scale(1.4);
    opacity: 1;
}

.input-point {
    top: 50%;
    left: -5px;
    transform: translateY(-50%);
}

.output-point {
    top: 50%;
    right: -5px;
    transform: translateY(-50%);
}

/* Element type styles */
.element.variable {
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.2), rgba(239, 68, 68, 0.4));
    border: 2px solid var(--accent-red);
}

.element.array {
    background: linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(139, 92, 246, 0.4));
    border: 2px solid var(--accent-purple);
}

.element.object {
    background: linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(99, 102, 241, 0.4));
    border: 2px solid var(--accent-indigo);
}

.element.counter {
    background: linear-gradient(135deg, rgba(0, 212, 255, 0.2), rgba(0, 212, 255, 0.4));
    border: 2px solid var(--primary-blue);
}

.element.function {
    background: linear-gradient(135deg, rgba(245, 158, 11, 0.2), rgba(245, 158, 11, 0.4));
    border: 2px solid var(--accent-orange);
}

.element.if {
    background: linear-gradient(135deg, rgba(234, 179, 8, 0.2), rgba(234, 179, 8, 0.4));
    border: 2px solid var(--accent-yellow);
}

.element.loop {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(16, 185, 129, 0.4));
    border: 2px solid var(--accent-green);
}

.element.return {
    background: linear-gradient(135deg, rgba(236, 72, 153, 0.2), rgba(236, 72, 153, 0.4));
    border: 2px solid var(--accent-pink);
}

.element.add,
.element.multiply,
.element.compare {
    background: linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(99, 102, 241, 0.4));
    border: 2px solid var(--accent-indigo);
}

.element.print,
.element.prompt {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(16, 185, 129, 0.4));
    border: 2px solid var(--accent-green);
}

/* Element content */
.element-label {
    font-size: 11px;
    color: currentColor;
    opacity: 0.7;
    text-transform: uppercase;
    font-weight: 600;
    margin-bottom: 2px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
    display: block; /* Ensure visibility */
}

.element-content {
    font-size: 13px;
    font-weight: 500;
    color: #fff;
    white-space: pre-wrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-height: 40px;
    line-height: 1.2;
    display: flex; /* Ensure visibility */
    align-items: center;
    justify-content: center;
}

.element-value {
    font-size: 16px;
    font-weight: bold;
    color: #fff;
}

/* Circular element styling */
.element.circular {
    height: var(--block-h-circle);
    border-radius: 50%;
}

/* Array specific styling */
.array-container {
    display: flex;
    gap: 2px;
    align-items: center;
    max-width: 100%;
    overflow: hidden;
    justify-content: center;
}

.array-bracket {
    font-size: 14px;
    font-weight: bold;
    color: currentColor;
}

.array-item {
    width: 16px;
    height: 16px;
    background: rgba(139, 92, 246, 0.3);
    border: 1px solid var(--accent-purple);
    border-radius: 2px;
    font-size: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fff;
}

/* View transition styles */
.view-transitioning .element {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
}

.view-transitioning .connection-line {
    transition: all 0.3s ease !important;
}

.view-transitioning .connection-point {
    transition: all 0.3s ease !important;
}

/* Stagger animation for multiple elements */
.view-transitioning .element:nth-child(1) { transition-delay: 0ms; }
.view-transitioning .element:nth-child(2) { transition-delay: 50ms; }
.view-transitioning .element:nth-child(3) { transition-delay: 100ms; }
.view-transitioning .element:nth-child(4) { transition-delay: 150ms; }
.view-transitioning .element:nth-child(5) { transition-delay: 200ms; }
.view-transitioning .element:nth-child(n+6) { transition-delay: 250ms; }

/* Loop special styling */
.element.loop::after {
    content: '';
    position: absolute;
    top: 50%;
    right: 10px;
    width: 12px;
    height: 12px;
    border: 2px solid currentColor;
    border-top: 2px solid transparent;
    border-radius: 50%;
    transform: translateY(-50%);
    animation: spin 2s linear infinite;
}

@keyframes spin {
    from { transform: translateY(-50%) rotate(0deg); }
    to { transform: translateY(-50%) rotate(360deg); }
}

/* Toolbar */
.toolbar {
  position: fixed;
  top: 20px;
  left: 20px;
  background: var(--bg-card);
  backdrop-filter: blur(20px);
  border: 1px solid var(--border-glass);
  border-radius: 12px;
  padding: 0;
  z-index: 100;
  max-height: calc(100vh - 40px);
  overflow-y: auto;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transform: translateX(0);
  opacity: 1;
  width: 200px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

.toolbar.hidden {
  transform: translateX(-100%);
  opacity: 0;
  pointer-events: none;
}

/* Tool Groups */
.tool-group {
  border-bottom: 1px solid var(--border-glass);
  padding: 0;
}

.tool-group:last-child {
  border-bottom: none;
}

.tool-group-title {
  font-size: 11px;
  font-weight: 600;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  padding: 12px 16px 8px 16px;
  margin: 0;
  background: rgba(255, 255, 255, 0.02);
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

/* Tools Container */
.tools {
  display: flex;
  flex-direction: column;
  gap: 0;
  padding: 8px;
}

/* Individual Tool Buttons */
.tool {
  background: transparent;
  border: 1px solid transparent;
  border-radius: 6px;
  padding: 8px 12px;
  font-size: 12px;
  font-weight: 500;
  color: var(--text-primary);
  cursor: pointer;
  transition: all 0.2s ease;
  text-align: left;
  width: 100%;
  display: flex;
  align-items: center;
  gap: 8px;
  font-family: 'Inter', sans-serif;
}

.tool:hover {
  background: rgba(255, 255, 255, 0.08);
  border-color: var(--border-glass);
  transform: translateX(2px);
}

.tool:active {
  background: rgba(255, 255, 255, 0.12);
  transform: translateX(1px);
}

.tool.active {
  background: var(--primary-blue);
  color: #000;
  font-weight: 600;
}

/* Toolbar Toggle Button */
.toolbar-toggle {
  position: fixed;
  top: 20px;
  left: 20px;
  background: var(--bg-card);
  backdrop-filter: blur(20px);
  border: 1px solid var(--border-glass);
  border-radius: 8px;
  padding: 12px;
  z-index: 101;
  cursor: pointer;
  font-size: 16px;
  color: var(--text-primary);
  transition: all 0.2s ease;
  display: none;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
}

.toolbar.hidden ~ .toolbar-toggle,
.toolbar-toggle.show {
  display: block;
}

.toolbar-toggle:hover {
  background: rgba(255, 255, 255, 0.1);
  transform: scale(1.05);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
}

.toolbar-toggle::before {
  content: 'üõ†Ô∏è';
}

/* Responsive Design */
@media (max-width: 768px) {
  .toolbar {
    width: 180px;
    top: 10px;
    left: 10px;
  }
  
  .tool-group-title {
    font-size: 10px;
    padding: 10px 12px 6px 12px;
  }
  
  .tool {
    padding: 6px 10px;
    font-size: 11px;
  }
  
  .tools {
    padding: 6px;
  }
}

@media (max-width: 480px) {
  .toolbar {
    width: calc(100vw - 20px);
    max-width: 160px;
  }
}

/* Scrollbar Styling for Toolbar */
.toolbar::-webkit-scrollbar {
  width: 4px;
}

.toolbar::-webkit-scrollbar-track {
  background: transparent;
}

.toolbar::-webkit-scrollbar-thumb {
  background: var(--border-glass);
  border-radius: 2px;
}

.toolbar::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.2);
}

/* Improved Visual Hierarchy */
.tool-group:first-child .tool-group-title {
  border-top-left-radius: 12px;
  border-top-right-radius: 12px;
}

/* Action buttons styling */
.tool-group:last-child .tool {
  font-weight: 600;
}

.tool-group:last-child .tool:hover {
  background: var(--accent-orange);
  color: #000;
}

/* Special styling for different action types */
.tool[data-type="variable"],
.tool[data-type="array"],
.tool[data-type="counter"],
.tool[data-type="object"] {
  position: relative;
}

.tool[data-type="variable"]::before { content: "üìä"; margin-right: 4px; }
.tool[data-type="array"]::before { content: "üìã"; margin-right: 4px; }
.tool[data-type="counter"]::before { content: "üî¢"; margin-right: 4px; }
.tool[data-type="object"]::before { content: "üì¶"; margin-right: 4px; }
.tool[data-type="function"]::before { content: "‚öôÔ∏è"; margin-right: 4px; }
.tool[data-type="if"]::before { content: "‚ùì"; margin-right: 4px; }
.tool[data-type="loop"]::before { content: "üîÑ"; margin-right: 4px; }
.tool[data-type="add"]::before { content: "‚ûï"; margin-right: 4px; }
.tool[data-type="multiply"]::before { content: "‚úñÔ∏è"; margin-right: 4px; }
.tool[data-type="print"]::before { content: "üñ®Ô∏è"; margin-right: 4px; }

/* Connection mode active state */
.tool#connectMode.active {
  background: var(--accent-green);
  color: #000;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

/* Control Panel */
.control-panel {
    position: fixed;
    top: 20px;
    right: 20px;
    background: var(--bg-card);
    backdrop-filter: blur(20px);
    border: 1px solid var(--border-glass);
    border-radius: 12px;
    padding: 20px;
    width: 250px;
    z-index: 100;
    max-height: calc(100vh - 40px);
    overflow-y: auto;
    transition: all 0.3s ease;
}

.control-panel.hidden {
    transform: translateX(100%);
    opacity: 0;
    pointer-events: none;
}

/* Add a small toggle button when panel is hidden */
.control-panel-toggle {
    position: fixed;
    top: 20px;
    right: 20px;
    background: var(--bg-card);
    border: 1px solid var(--border-glass);
    border-radius: 8px;
    padding: 10px;
    z-index: 101;
    cursor: pointer;
    backdrop-filter: blur(20px);
    display: none;
}

.control-panel.hidden + .control-panel-toggle {
    display: block;
}

.run-button,
.save-button,
.load-button {
    width: 100%;
    padding: 10px;
    border: none;
    border-radius: 6px;
    font-weight: 600;
    cursor: pointer;
    margin-bottom: 8px;
    font-size: 12px;
    transition: all 0.2s ease;
}

.run-button {
    background: var(--accent-orange);
    color: #000;
}

.run-button:hover {
    background: #fbbf24;
}

.run-button:disabled {
    background: #374151;
    color: #6b7280;
    cursor: not-allowed;
}

.save-button {
    background: var(--accent-green);
    color: #000;
}

.save-button:hover {
    background: #14d68b;
}

.load-button {
    background: var(--accent-purple);
    color: #fff;
}

.load-button:hover {
    background: #9d4edd;
}

.info-section {
    margin: 16px 0;
    padding-top: 16px;
    border-top: 1px solid var(--border-glass);
}

.info-title {
    font-size: 14px;
    font-weight: 600;
    margin-bottom: 8px;
}

.info-text {
    font-size: 12px;
    line-height: 1.5;
    color: var(--text-secondary);
}

.stats {
    margin-top: 16px;
    padding-top: 16px;
    border-top: 1px solid var(--border-glass);
}

.stat {
    display: flex;
    justify-content: space-between;
    margin-bottom: 4px;
    font-size: 12px;
}

.stat-label {
    color: var(--text-secondary);
}

.stat-value {
    color: var(--text-primary);
    font-weight: 600;
}

/* Connection lines */
.connection-line {
    stroke: var(--primary-blue);
    stroke-width: 2;
    fill: none;
    cursor: pointer;
    opacity: 0.7;
    pointer-events: all;
}

.connection-line:hover {
    stroke-width: 3;
    opacity: 1;
}

.connection-line.active {
    stroke: var(--accent-orange);
    stroke-width: 3;
    opacity: 1;
    animation: pulse 1s infinite;
}

@keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.6; }
}

/* Status */
.status {
    position: fixed;
    bottom: 20px;
    left: 20px;
    background: var(--bg-card);
    backdrop-filter: blur(20px);
    border: 1px solid var(--border-glass);
    border-radius: 8px;
    padding: 12px 16px;
    font-size: 12px;
    z-index: 100;
    transition: all 0.3s ease;
}

.status.success { 
    color: var(--accent-green); 
    border-color: var(--accent-green);
}

.status.error { 
    color: var(--accent-red); 
    border-color: var(--accent-red);
}

.status.running { 
    color: var(--accent-orange); 
    border-color: var(--accent-orange);
}

/* Flow particle */
.flow-particle {
    position: absolute;
    width: 6px;
    height: 6px;
    background: var(--accent-orange);
    border-radius: 50%;
    box-shadow: 0 0 10px var(--accent-orange);
    z-index: 15;
    pointer-events: none;
}

/* Connect mode styling */
.connect-mode {
    cursor: crosshair;
}

.connect-mode .element {
    cursor: pointer;
}